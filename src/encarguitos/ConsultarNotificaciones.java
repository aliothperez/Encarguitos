/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package encarguitos;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author falio
 */
public class ConsultarNotificaciones extends javax.swing.JFrame {
Conexion bd = new Conexion();
private DefaultListModel<String> listModel = new DefaultListModel<>();

    /**
     * Creates new form ConsultarNotificaciones
     */
    public ConsultarNotificaciones() {
        initComponents();
        try {
            if(bd.conexion.isClosed()){
                System.out.println("Noo!!!. Se cerro");
            }
        } catch (SQLException ex) {
            
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Configurar el modelo del JList
    jList1.setModel(listModel);
    cargarNotificaciones();
    
    // Añadir listener para doble clic
    jList1.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent evt) {
            if (evt.getClickCount() == 2) {
                mostrarDetallesNotificacion();
            }
        }
    });
    
    BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        String seleccionado = jList1.getSelectedValue();
        if (seleccionado != null && !seleccionado.equals("No hay notificaciones disponibles")) {
            String id = seleccionado.split("\\|")[0].trim().split(":")[1].trim();
            
            int confirm = JOptionPane.showConfirmDialog(
                ConsultarNotificaciones.this, 
                "¿Eliminar esta notificación?", 
                "Confirmar", 
                JOptionPane.YES_NO_OPTION);
            
            if (confirm == JOptionPane.YES_OPTION) {
                if (bd.eliminarNotificacion(id)) {
                    JOptionPane.showMessageDialog(ConsultarNotificaciones.this, 
                        "Notificación eliminada", 
                        "Éxito", 
                        JOptionPane.INFORMATION_MESSAGE);
                    cargarNotificaciones();
                } else {
                    JOptionPane.showMessageDialog(ConsultarNotificaciones.this, 
                        "Error al eliminar", 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(ConsultarNotificaciones.this, 
                "Seleccione una notificación", 
                "Advertencia", 
                JOptionPane.WARNING_MESSAGE);
        }
    }
});

BtnVolver.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        // Código existente para volver
        dispose();
    }
});

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BtnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        BtnEliminar = new javax.swing.JButton();
        BtnActualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Consultar Notificaciones");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        BtnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/volver.png"))); // NOI18N
        BtnVolver.setContentAreaFilled(false);
        BtnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(BtnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, -1));

        jList1.setBorder(null);
        jList1.setToolTipText("");
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 380, 370));

        BtnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnEliminar.setForeground(new java.awt.Color(60, 140, 22));
        BtnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        BtnEliminar.setText("Eliminar");
        BtnEliminar.setContentAreaFilled(false);
        BtnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(BtnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        BtnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnActualizar.setForeground(new java.awt.Color(60, 140, 22));
        BtnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/actualizar.png"))); // NOI18N
        BtnActualizar.setText("Actualizar");
        BtnActualizar.setContentAreaFilled(false);
        BtnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnActualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnActualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(BtnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PlantillaConsulta.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed
        
          
        cargarNotificaciones();
        JOptionPane.showMessageDialog(ConsultarNotificaciones.this, 
            "Notificaciones actualizadas", 
            "Información", 
            JOptionPane.INFORMATION_MESSAGE);
    
    }//GEN-LAST:event_BtnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarNotificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarNotificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarNotificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarNotificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultarNotificaciones().setVisible(true);
            }
        });
    }
    private void cargarNotificaciones() {
    listModel.clear(); // Limpiar el modelo existente
    
    ArrayList<String[]> notificaciones = bd.mostrarNotificaciones();
    
    if (notificaciones.isEmpty()) {
        listModel.addElement("No hay notificaciones disponibles");
        return;
    }
    
    for (String[] notif : notificaciones) {
        // Formatear la información para mostrar en el JList
        String elemento = String.format(
            "ID: %s | Usuario: %s | Solicitud: %s | Estado: %s",
            notif[0],  // ID Notificación
            notif[1],  // Nombre Usuario
            notif[2],  // Tipo Solicitud
            notif[3]   // Estatus
        );
        listModel.addElement(elemento);
    }
}

private void mostrarDetallesNotificacion() {
    String seleccionado = jList1.getSelectedValue();
    if (seleccionado != null && !seleccionado.equals("No hay notificaciones disponibles")) {
        String id = seleccionado.split("\\|")[0].trim().split(":")[1].trim();
        
        try {
            String SQL = "Select n.idNotificacion,u.NombreUsuario,s.idSolicitud,n.Descripcion from Notificaciones n inner join Usuarios u on u.idUsuario=n.idUsuario inner join Solicitud s on s.idSolicitud = n.idSolicitud;";
            
            bd.cursor = bd.transaccion.executeQuery(SQL);
            
            if (bd.cursor.next()) {
                String mensaje = String.format(
                    "<html><b>Descripción:</b> %s<br><br>" +
                    "<b>Usuario:</b> %s<br>" +
                    "<b>Tipo Solicitud:</b> %s<br>" +
                    "<b>Especificaciones:</b> %s<br>" +
                    "<b>Estado:</b> %s</html>",
                    bd.cursor.getString(1),  // Descripción
                    bd.cursor.getString(2),  // Nombre Usuario
                    bd.cursor.getString(3),  // Tipo Solicitud
                    bd.cursor.getString(4),  // Especificaciones
                    bd.cursor.getString(5)   // Estatus
                );
                
                JOptionPane.showMessageDialog(this, mensaje, "Detalles Notificación", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, 
                "Error al obtener detalles: " + ex.getMessage(),
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnActualizar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
