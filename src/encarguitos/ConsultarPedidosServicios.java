/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package encarguitos;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author falio
 */
public class ConsultarPedidosServicios extends javax.swing.JFrame {
Conexion bd = new Conexion();
DefaultListModel ls= new DefaultListModel();

Usuario u = new Usuario();
    /**
     * Creates new form ConsultarPedidosServicios
     */
    public ConsultarPedidosServicios() {
        initComponents();
    try {
            if(bd.conexion.isClosed()){
                System.out.println("Noo!!!. Se cerro");
            }
        } catch (SQLException ex) {
            
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        lsSolicitudes.setModel(ls);
        lsSolicitudes.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 2) { // Doble clic
                    String seleccionado = lsSolicitudes.getSelectedValue();
                    if (seleccionado != null) {
                        mostrarDetallesSolicitud(seleccionado);
                    }
                }
            }
        });
        
        MostrarlsPedidos();
        u=Login.u;
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BtnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsSolicitudes = new javax.swing.JList<>();
        BtnEliminar = new javax.swing.JButton();
        BtnAgregar = new javax.swing.JButton();
        BtnActualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Consultar Solicitudes");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        BtnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/volver.png"))); // NOI18N
        BtnVolver.setContentAreaFilled(false);
        BtnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVolverActionPerformed(evt);
            }
        });
        jPanel1.add(BtnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, -1));

        lsSolicitudes.setBorder(null);
        lsSolicitudes.setToolTipText("");
        jScrollPane1.setViewportView(lsSolicitudes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 380, 370));

        BtnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnEliminar.setForeground(new java.awt.Color(60, 140, 22));
        BtnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        BtnEliminar.setText("Eliminar");
        BtnEliminar.setContentAreaFilled(false);
        BtnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(BtnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, -1, -1));

        BtnAgregar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnAgregar.setForeground(new java.awt.Color(60, 140, 22));
        BtnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mas.png"))); // NOI18N
        BtnAgregar.setText("Agregar");
        BtnAgregar.setContentAreaFilled(false);
        BtnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(BtnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        BtnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnActualizar.setForeground(new java.awt.Color(60, 140, 22));
        BtnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/actualizar.png"))); // NOI18N
        BtnActualizar.setText("Refrescar");
        BtnActualizar.setContentAreaFilled(false);
        BtnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnActualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnActualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(BtnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PlantillaConsulta.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarActionPerformed
        RegistrarPedidoServicio RP = new RegistrarPedidoServicio();
        RP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnAgregarActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed

        String seleccionado = lsSolicitudes.getSelectedValue();
        if (seleccionado != null) {
            String id = obtenerID(seleccionado);
            if (id != null) {
                if (bd.eliminarSolicitud(id)) {
                    JOptionPane.showMessageDialog(this, "Solicitud eliminada con éxito");
                    MostrarlsPedidos(); // Actualizar la lista
                } else {
                    JOptionPane.showMessageDialog(this, 
                        "No se pudo eliminar la solicitud", 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, 
                "No has seleccionado ninguna solicitud", 
                "Advertencia", 
                JOptionPane.WARNING_MESSAGE);
        }
        MostrarlsPedidos();
        /*String seleccionado = lsSolicitudes.getSelectedValue();
        if (seleccionado != null) {
               // Aquí deberías extraer el ID del cliente desde el texto del elemento (dependiendo de cómo lo almacenas)
                String idU = obtenerID(seleccionado); // Método para extraer ID
                if(bd.eliminarSolicitud(idU)){
                    JOptionPane.showMessageDialog(this, "Se elimino con exitoo");
                }
        } else {
            JOptionPane.showMessageDialog(this, "No has seleccionado ningún Elemento.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }*/
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed
        MostrarlsPedidos();
    }//GEN-LAST:event_BtnActualizarActionPerformed

    private void BtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVolverActionPerformed
        if(u.rolUsuario.equals("Gerente")){
            PrincipalGerente v = new PrincipalGerente();
            v.bd=bd;
            v.setVisible(true);
            this.dispose();
        }if(u.rolUsuario.equals("Gestor de Operaciones")){
            PrincipalGestor v = new PrincipalGestor();
            v.bd=bd;
            v.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_BtnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarPedidosServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarPedidosServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarPedidosServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarPedidosServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultarPedidosServicios().setVisible(true);
            }
        });
    }
    /*public String obtenerID(String texto) {
    return texto.split(",")[0].replace("ID: ", "").trim(); // Extrae el ID basado en el formato
    }*/
    public String obtenerID(String texto) {
    try {
        // Asume formato "ID: 123, Tipo: ..."
        return texto.split(",")[0].split(":")[1].trim();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al obtener ID", "Error", JOptionPane.ERROR_MESSAGE);
        return null;
    }
}
    public void MostrarlsPedidos(){
         DefaultListModel<String> model = (DefaultListModel<String>) lsSolicitudes.getModel();
    model.clear();

    ArrayList<String[]> datos = bd.mostrarListaSolicitud();

    if (datos.isEmpty()) {
        model.addElement("No hay pedidos disponibles");
        return;
    }

    for (String[] data : datos) {
        String elemento = String.format(
            "ID: %s | Cliente: %s | Repartidor: %s",
            data[0], // ID Solicitud
            data[1], // Nombre Cliente
            data[2]  // Nombre Repartidor
        );
        model.addElement(elemento);
    }
        
        
    }
 private void mostrarDetallesSolicitud(String elementoSeleccionado) {
    // Extraer el ID del pedido del texto seleccionado
    String id = elementoSeleccionado.split("\\|")[0].replace("ID:", "").trim();
    
    if (id != null && !id.isEmpty()) {
        try {
            // Obtener todos los detalles del pedido
            String SQL = "SELECT s.idSolicitud, s.Tipo, s.Especificaciones, " +
                         "DATE_FORMAT(s.FechaSolicitud, '%d/%m/%Y') as FechaSolicitud, " +
                         "DATE_FORMAT(s.FechaEntrega, '%d/%m/%Y') as FechaEntrega, " +
                         "s.Estatus, c.NombreCliente, c.NumeroTel, c.Direccion, " +
                         "c.Referencias, u.NombreUsuario,s.Total  " +
                         "FROM Solicitud s " +
                         "INNER JOIN Cliente c ON s.idCliente = c.idCliente " +
                         "INNER JOIN Usuarios u ON s.idUsuario = u.idUsuario " +
                         "WHERE s.idSolicitud = " + id;
            
            bd.cursor = bd.transaccion.executeQuery(SQL);
            
            if (bd.cursor.next()) {
                String[] datos = new String[12];
                for (int i = 0; i < datos.length; i++) {
                    datos[i] = bd.cursor.getString(i+1);
                }
                
                // Mostrar la ventana de detalles
                DetallesProdServ detalles = new DetallesProdServ();
                detalles.cargarDetallesSolicitud(datos);
                detalles.bd=bd;
                detalles.setVisible(true);
                this.dispose();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, 
                "Error al obtener detalles del pedido: " + ex.getMessage(),
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnActualizar;
    private javax.swing.JButton BtnAgregar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lsSolicitudes;
    // End of variables declaration//GEN-END:variables
}
